import { Request, Response } from "express";
import { Get{{toPascalCase model.name}}Schema, AdminCreate{{toPascalCase model.name}}Req } from "./validators";

export async function GET(req: Request, res: Response) {
  const service = req.scope.resolve("{{module.name}}");
  const validated = await Get{{toPascalCase model.name}}Schema.parseAsync(req.query);

  {{#if (isModuleModel model module)}}
  const [items, count] = await Promise.all([
    service.list(validated.where, {
      skip: validated.offset,
      take: validated.limit,
    }),
    service.count(validated.where),
  ]);
  {{else}}
  const [items, count] = await Promise.all([
    service.list{{toPascalCase model.plural}}(validated.where, {
      skip: validated.offset,
      take: validated.limit,
    }),
    service.count{{toPascalCase model.plural}}(validated.where),
  ]);
  {{/if}}

  res.json({
    items,
    count,
    offset: validated.offset,
    limit: validated.limit,
  });
}

export async function POST(req: Request<AdminCreate{{toPascalCase model.name}}Req>, res: Response) {
  const service = req.scope.resolve("{{module.name}}");
  const validated = await AdminCreate{{toPascalCase model.name}}Req.parseAsync(req.body);

  {{#if (isModuleModel model module)}}
  const result = await service.create(validated);
  {{else}}
  const result = await service.create{{toPascalCase model.singular}}(validated);
  {{/if}}

  res.json(result);
} 