/**
 * This file is auto-generated and will be overwritten by subsequent generations.
 * Manual changes should be made to the generator templates instead.
 */

import { 
  defineMiddlewares,
  validateAndTransformQuery,
  validateAndTransformBody 
} from "@medusajs/framework/http"
import { createFindParams } from "@medusajs/medusa/api/utils/validators"
import { z } from "zod"
import { 
  PostAdminCreate{{toPascalCase module.moduleModel.singular}},
  PostAdminUpdate{{toPascalCase module.moduleModel.singular}}
} from "./validators"

export const GetTestsSchema = createFindParams()

export default defineMiddlewares({
  routes: [
    // List {{plural}}
    {
      matcher: "/admin/{{toKebabCase module.moduleModel.plural}}",
      method: "GET",
      middlewares: [
        validateAndTransformQuery(GetTestsSchema, {
          defaults: [
            "id",
            {{#each fields}}
            "{{name}}"{{#if relation}}, "{{name}}.*"{{/if}}{{#unless @last}},{{/unless}}
            {{/each}}
          ],
          isList: true
        })
      ]
    },

    // Create {{singular}}
    {
      matcher: "/admin/{{toKebabCase module.moduleModel.plural}}",
      method: "POST",
      middlewares: [
        validateAndTransformBody(PostAdminCreate{{toPascalCase module.moduleModel.singular}})
      ]
    },

    // Update {{singular}}
    {
      matcher: "/admin/{{toKebabCase module.moduleModel.plural}}/:id",
      method: "POST",
      middlewares: [
        validateAndTransformBody(PostAdminUpdate{{toPascalCase module.moduleModel.singular}})
      ]
    }
  ] as const
}) 