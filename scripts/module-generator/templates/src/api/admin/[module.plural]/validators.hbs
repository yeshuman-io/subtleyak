import { z } from "zod";
import { createFindParams } from "@medusajs/medusa/api/utils/validators";

export const GetSchema = createFindParams();

{{#with (find module.models "name" module.singular)}}
export const PostAdminCreate{{toPascalCase singular}} = z.object({
  {{#each fields}}
  {{#if relation}}
  {{#if (eq relation.type "belongsTo")}}
  {{toSnakeCase name}}_id: z.string().min(1),
  {{/if}}
  {{/if}}
  {{#unless relation}}
  {{name}}: z.{{#if (eq type "text")}}string(){{else if (eq type "number")}}number(){{else if (eq type "boolean")}}boolean(){{else if (eq type "date")}}date(){{else}}string(){{/if}}.min(1),
  {{/unless}}
  {{/each}}
});

export const PostAdminUpdate{{toPascalCase singular}} = z.object({
  {{#each fields}}
  {{#if relation}}
  {{#if (eq relation.type "belongsTo")}}
  {{toSnakeCase name}}_id: z.string().min(1).optional(),
  {{/if}}
  {{/if}}
  {{#unless relation}}
  {{name}}: z.{{#if (eq type "text")}}string(){{else if (eq type "number")}}number(){{else if (eq type "boolean")}}boolean(){{else if (eq type "date")}}date(){{else}}string(){{/if}}.optional(),
  {{/unless}}
  {{/each}}
});

export type {{toPascalCase singular}}AdminListRes = {
  {{../module.plural}}: any[];
  count: number;
  limit: number;
  offset: number;
};
{{/with}}